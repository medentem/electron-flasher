name: Build Electron App

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Setup Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: '20.x'

      - name: Install Dependencies
        run: npm install

      # macOS-specific steps for code signing and notarization
      - name: Decode and Import Certificate
        if: matrix.os == 'macos-latest'
        env:
          CERTIFICATE_DATA: ${{ secrets.MACOS_CERTIFICATE }}
          CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
        run: |
          echo "$CERTIFICATE_DATA" | base64 --decode > signing_certificate.p12
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import signing_certificate.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

      - name: Set Environment Variables
        if: matrix.os == 'macos-latest'
        env:
          APPLE_ID: ${{ secrets.APPLE_ID || '' }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD || '' }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID || '' }}
        run: echo $APPLE_ID

      - name: Build Electron App
        run: npx electron-forge make

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ matrix.os }}-artifacts
          path: out/make/*